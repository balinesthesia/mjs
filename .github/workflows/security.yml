# .github/workflows/security.yml
name: Security Scan

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: false
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Run npm audit (Frontend)
      continue-on-error: true
      run: |
        cd frontend
        npm install --package-lock-only
        npm audit --json > ../npm-audit-frontend.json || true

    - name: Run npm audit (Docs)
      continue-on-error: true
      run: |
        cd docs
        npm install --package-lock-only
        npm audit --json > ../npm-audit-docs.json || true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install safety
      run: pip install safety

    - name: Run Python safety check
      continue-on-error: true
      run: |
        cd ai-service
        poetry export -f requirements.txt --without-hashes | safety check --json > ../python-safety-check.json || true

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Run cargo audit
      continue-on-error: true
      run: |
        cargo install cargo-audit
        cd backend
        cargo audit --json > ../cargo-audit.json || true

    - name: Upload Trivy scan results
      continue-on-error: true
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy'

    - name: Process and report vulnerabilities
      continue-on-error: true
      run: |
        echo "Security Scan Summary:" > security-report.txt
        echo "=====================" >> security-report.txt

        # Process npm audit results
        if [ -f npm-audit-frontend.json ]; then
          echo -e "\nFrontend npm audit results:" >> security-report.txt
          cat npm-audit-frontend.json | jq -r '.advisories | length | "Found \(.) vulnerabilities"' >> security-report.txt 2>/dev/null || echo "No vulnerabilities found" >> security-report.txt
        fi

        if [ -f npm-audit-docs.json ]; then
          echo -e "\nDocs npm audit results:" >> security-report.txt
          cat npm-audit-docs.json | jq -r '.advisories | length | "Found \(.) vulnerabilities"' >> security-report.txt 2>/dev/null || echo "No vulnerabilities found" >> security-report.txt
        fi

        # Process cargo audit results
        if [ -f cargo-audit.json ]; then
          echo -e "\nRust cargo audit results:" >> security-report.txt
          cat cargo-audit.json | jq -r '.vulnerabilities | length | "Found \(.) vulnerabilities"' >> security-report.txt 2>/dev/null || echo "No vulnerabilities found" >> security-report.txt
        fi

        # Process Python safety check results
        if [ -f python-safety-check.json ]; then
          echo -e "\nPython safety check results:" >> security-report.txt
          cat python-safety-check.json | jq -r 'length | "Found \(.) vulnerabilities"' >> security-report.txt 2>/dev/null || echo "No vulnerabilities found" >> security-report.txt
        fi

        cat security-report.txt

    - name: Upload security reports
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          security-report.txt
          npm-audit-frontend.json
          npm-audit-docs.json
          cargo-audit.json
          python-safety-check.json
          trivy-results.sarif
